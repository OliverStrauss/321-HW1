/ assignment1.legv8asm
/ Oliver Strauss (ols756@iastate.edu)
/ CS321 Fall 2025 - Programming Assignment 1
/ Stoopid Sort implementation

B main

main:
SUB SP, SP, #40          / make space for 5 qwords (5 * 8 = 40 bytes)
MOV X9, #10
STR X9, [SP, #0]         / a[0] = 10
MOV X9, #20
STR X9, [SP, #8]         / a[1] = 20
MOV X9, #30
STR X9, [SP, #16]        / a[2] = 30
MOV X9, #40
STR X9, [SP, #24]        / a[3] = 40
MOV X9, #50
STR X9, [SP, #32]        / a[4] = 50


    
MOV X1, #1           / X1 = n
MOV X2, #3           / X2 = m

BL max_index          / call max_index(a, n, m)
PRNT X0              
HALT                 
max_index:
    SUBI SP, SP, #32
    STUR X30, [SP, #0]
    STUR X9,  [SP, #8]
    STUR X10, [SP, #16]

    / Load a[n] into X9
    LSL X9, X1, #3
    ADD X9, X0, X9
    LDUR X9, [X9, #0]

    / Load a[m] into X10
    LSL X10, X2, #3
    ADD X10, X0, X10
    LDUR X10, [X10, #0]

    / Compare a[n] and a[m]
    SUBS XZR, X9, X10

B.LT returnM          / if a[n] < a[m], return a[m]

/ Otherwise, return a[n]
ADD X0, X1 ,XZR
B done

returnM:
    MOV X0, X10


done:
    // Epilogue - restore registers
    LDUR X30, [SP, #0]
    LDUR X9,  [SP, #8]
    LDUR X10, [SP, #16]
    ADDI SP, SP, #32
    BR LR

